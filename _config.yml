# ============================================================================
# Jekyll Configuration File for STRATO Mercata
# ============================================================================
# This file configures how Jekyll builds and serves the site.
# Jekyll Documentation: https://jekyllrb.com/docs/configuration/

# ============================================================================
# Build Directory Configuration
# ============================================================================
# Tell Jekyll to look for content in the source/ directory

source: source

# ============================================================================
# Basic Site Information
# ============================================================================
# These settings define your site's identity and are used throughout templates,
# SEO optimization, and social media sharing.

title: "STRATO Mercata"
description: "Easily earn on vaulted gold, silver & crypto. Get instant credit. Built by ETH veterans"
baseurl: ""  # Empty for custom domain at root
url: "https://stratomercata.com"  # Production domain
author: "Bob Summerwill"  # Default author for content and SEO

# ============================================================================
# SEO and Localization Settings
# ============================================================================
# These settings enhance search engine optimization and define site language/timezone.

lang: en_US  # Language code for HTML lang attribute and SEO
timezone: America/New_York  # Timezone for date processing
keywords: "STRATO Mercata, blockchain, cryptocurrency, DeFi, real-world assets, RWA, gold, silver, lending, borrowing, trading, Ethereum, tokenization"  # Default keywords for SEO

# ============================================================================
# Site Verification Codes
# ============================================================================
# Add verification codes from search engines to prove site ownership.
# These appear as <meta> tags in the site <head> for verification.

google_site_verification: ""  # Google Search Console verification (add when available)
bing_site_verification: ""  # Bing Webmaster Tools verification (add when available)

# ============================================================================
# Analytics Configuration
# ============================================================================
# Configure web analytics tracking. The tracking code is automatically
# included in all pages via the default layout.

google_analytics: "G-HZMGT8Q60M"  # Google Analytics 4 tracking ID

# ============================================================================
# Social Media Configuration
# ============================================================================
# Social media accounts and links for SEO, Open Graph, and structured data.
# These values are used throughout the site for:
# - Social media meta tags (Twitter Cards, Open Graph, LinkedIn)
# - Schema.org structured data (sameAs links for organization)
# - Default author attribution
#
# Note: These are skipped only for hidden people profiles (page.hidden: true)
# to prevent privacy leaks. All other pages include these social references.

social:
  # LinkedIn company page username (used in linkedin:owner meta tag)
  linkedin: "stratomercata"
  
  # Twitter/X account configuration
  twitter:
    username: "stratomercata"  # Used for twitter:site and twitter:creator tags
  
  # Social media profile links (used in Schema.org Organization structured data)
  # These appear in search results and help establish site authority
  links:
    - "https://twitter.com/stratomercata"
    - "https://www.linkedin.com/company/stratomercata"
    - "https://github.com/stratomercata"
    - "https://t.me/stratomercata"

# ============================================================================
# Jekyll Build Settings
# ============================================================================
# These settings control how Jekyll processes and builds your site.

markdown: kramdown  # Markdown processor (kramdown is Jekyll's default)
highlighter: rouge  # Syntax highlighter for code blocks
permalink: /:categories/:year/:month/:day/:title/  # URL structure for blog posts
future: true  # Publish posts with future dates (useful for scheduling content)

# Kramdown-specific settings
kramdown:
  # Use straight quotes instead of curly quotes for better compatibility
  smart_quotes: ["apos", "apos", "quot", "quot"]

# ============================================================================
# Jekyll Collections
# ============================================================================
# Collections organize related content into groups. Each collection creates
# a content type with its own folder, URL structure, and processing rules.
# 
# How Collections Work:
# - Files go in folders named _[collection-name]/ (e.g., _people/, _blog/)
# - Each .md file becomes a webpage with its own URL
# - Collections can be accessed in templates as site.[collection-name]
# - Perfect for content that isn't blog posts but needs organization

collections:
  # Blog Collection (_blog/ folder)
  # Purpose: Platform updates, announcements, and educational content
  # Example files: platform-launch.md, trading-guide.md
  blog:
    output: true  # Generate individual pages for each blog post
    permalink: /blog/:name/  # URL pattern: /blog/platform-launch/
  
  # People Collection (_people/ folder) 
  # Purpose: Team member profiles and contributor biographies
  # Example files: bob-summerwill.md, victor-wong.md
  people:
    output: true  # Generate individual pages for each person
    permalink: /people/:name/  # URL pattern: /people/bob-summerwill/
  
  # Videos Collection (_videos/ folder)
  # Purpose: Show episodes, contest announcements, and platform demonstrations
  # Example files: strato-mercata-show-2025.10.08.md
  videos:
    output: true  # Generate individual pages for each video
    permalink: /videos/:path/  # URL pattern: /videos/strato-mercata-show-2025.10.08/

# ============================================================================
# Default Front Matter Values
# ============================================================================
# Automatically apply front matter values to files based on their location.
# This saves you from manually adding "layout: person" to every people file.
#
# How Defaults Work:
# - Jekyll checks each file against these scope rules
# - If a file matches the scope, the values are automatically applied
# - Files can still override defaults by specifying their own values
#
# Path-based Targeting:
# - path: "_people" matches any file in the _people/ folder
# - This is simpler than collection-based targeting (type: "people")
# - Both approaches work identically, but path-based is more readable

defaults:
  # Blog posts get the "blog" layout automatically
  # Without this: You'd need "layout: blog" in every blog file
  # With this: Jekyll adds it automatically to all files in _blog/
  - scope: { path: "_blog" }
    values: { layout: "blog" }
  
  # People get the "person" layout automatically  
  # Without this: You'd need "layout: person" in all people files
  # With this: Jekyll adds it automatically to all files in _people/
  - scope: { path: "_people" }
    values: { layout: "person" }
  
  # Videos get the "video" layout automatically
  # Without this: You'd need "layout: video" in every video file
  # With this: Jekyll adds it automatically to all files in _videos/
  - scope: { path: "_videos" }
    values: { layout: "video" }

# ============================================================================
# Jekyll Plugins
# ============================================================================
# Plugins extend Jekyll's functionality. These are automatically loaded
# and provide additional features during site generation.

plugins:
  - jekyll-feed     # Generates RSS/Atom feeds at /feed.xml
  - jekyll-sitemap  # Generates XML sitemap at /sitemap.xml for search engines

# ============================================================================
# How This All Works Together
# ============================================================================
# 1. Collections organize your content into logical groups (people, blog, videos)
# 2. Defaults automatically assign the correct layout to each content type
# 3. Your centralized SEO system (_includes/seo.html) provides different 
#    optimizations for each collection type
# 4. Index pages (people/index.html) loop through collections to display content
# 5. The auto-linking system can cross-reference between collections
# 6. Jekyll builds everything into a static website in the _site/ folder
#
# This architecture lets you:
# - Add new people without specifying layouts
# - Organize content logically
# - Maintain consistent URLs
# - Provide collection-specific features (like different SEO images)
# - Scale to hundreds of content files efficiently
